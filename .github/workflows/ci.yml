name: CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Build using rush
      - name: Verify Change Logs
        run: node common/scripts/install-run-rush.js change --verify
      - name: Rush Install
        run: node common/scripts/install-run-rush.js install
      - name: Rush rebuild
        run: node common/scripts/install-run-rush.js rebuild --verbose

      - name: Configure AWS Credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::257838883645:role/GitHub
          aws-region: us-east-1
          output-credentials: true

      - name: Install Amazon ECR Docker Credential Helper # Requried to securly log in to AWS ECR. `docker login` with `aws ecr get-login-password` is insecure.
        run: |
          sudo apt-get update
          sudo apt-get install -y amazon-ecr-credential-helper

      - name: Configure Docker to use ECR Credential Helper
        run: |
          mkdir -p ~/.docker
          echo '{"credsStore": "ecr-login"}' > ~/.docker/config.json

      - name: Setup porter
        uses: porter-dev/setup-porter@v0.1.0

      - name: Push Docker image DB
        env:
          ECR_REGISTRY: 257838883645.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: databases-db
        run: |
          MAIN_WORK_DIR=$PWD
          cd databases/db
          chmod 744 docker-build.sh
          ./docker-build.sh --image_name $ECR_REGISTRY/$ECR_REPOSITORY --db_url ${{ secrets.DB_URL }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY
          cd $MAIN_WORK_DIR

      - name: Deploy Porter stack DB
        timeout-minutes: 30
        run: exec porter app update-tag databases-db-job --tag latest
        env:
          PORTER_CLUSTER: 3917
          PORTER_HOST: https://dashboard.getporter.dev
          PORTER_PROJECT: 10773
          PORTER_TOKEN: ${{ secrets.PORTER_TOKEN }}

      - name: Install Infisical CLI
        run: |
          curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.deb.sh' | sudo -E bash
          sudo apt-get update && sudo apt-get install -y infisical

      - name: Push Docker image express
        env:
          ECR_REGISTRY: 257838883645.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: servers-express
        run: |
          MAIN_WORK_DIR=$PWD
          cd servers/express
          chmod 744 docker-build.sh
          ./docker-build.sh --image_name $ECR_REGISTRY/$ECR_REPOSITORY --inf_client_id ${{ secrets.INFISICAL_CLIENT_ID }} --inf_client_secret ${{ secrets.INFISICAL_CLIENT_SECRET }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY
          cd $MAIN_WORK_DIR

      - name: Deploy Porter stack express
        timeout-minutes: 30
        run: exec porter app update-tag servers-express --tag latest
        env:
          PORTER_CLUSTER: 3917
          PORTER_HOST: https://dashboard.getporter.dev
          PORTER_PROJECT: 10773
          PORTER_TOKEN: ${{ secrets.PORTER_TOKEN }}
